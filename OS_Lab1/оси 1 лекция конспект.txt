ядро ос - резидентная часть, загружается всегда при запуске ос и располагается в 
озу. любая программкод) просто обращается к функциям ядра ос.
драйверы - обеспечивают вз-ие ос с аппаратным оборудованием. обеспечивает
независимость от оборудования (можно сменить оборудование и драйвер)
шина передает данные и выполняет адресацию
цп, озу и перефирия подключены к системной шине, расположенной внутри матери
[архитектура цп: в основном risc - много простых команд]
[набор команд цп: x86, x64, x86-64, ARM]

32 разрядные проги выполняются и на 64-битных системах,т.к. они писались так
чтобы они работали и на 32 и на 64

пзу - энергонезависимая память,в них хранятся проги биос,внутри есть тактовый генератор
это таблетка биоса. частота тактового генератора определяет пр-сть компа
(разгон - увеличение тактовой частоты. главная проблема при разгоне цп - отвод тепла)

существует аппаратное и программное прерывание памяти. программное может сделать
сам программист. нужно чтобы сделать какие то программные действия; символизирует
о завершении операции. например дисковые у-ва обратились чтобы получить какие то данные,
и они символизируют ос о том,что данные уже доставлены, прерыванием. нажатие на клавишу
клавиатуры тоже сопрвождается прерыванием; при работе часов для изменения времени
также происходит программное прерывание. 
орбитр прерываний приоретизирует прерывания. самые приориетные: 1. часы и 2. клава
это микросхемкка на матери к которой подведены провода

биос работает ток при загрузке; начинает работать сразу при нажатии на кнопку включения.
ф-ии: 
тест оборудования
найти подключенные у-ва
[имеет свой апи для работы с оборудованием,прим. на этапе загрузки. 
после этого начинают работать драйверы]

драйверы - программы для унификацированного доступа по к аппаратуре
также очень важен для ос: биос находит подкл. у-ва, а драйверы дают возможность
с ними работать

hal - уровень между аппаратурой и ядром ос
в линуксе драйвер является частью ядра, в винде - длл либы

все объекты ос - шины, проги, ... - это ресурсы. при обращении к ресурсу в ядре 
создается объект, который ему соответсвует

фреймворк - набор библиотек и правил работы с ними!
на винде: дотнет и донет-кор фреймворк

